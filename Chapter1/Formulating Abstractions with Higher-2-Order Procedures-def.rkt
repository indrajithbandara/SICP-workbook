#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 95 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 158 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 150 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 69 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 1995 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9          61 21           0 0           0 9 0 14 3 5 #"1.3.2"
0 0 24 3 1 #" "
0 0 14 3 12 #"Constructing"
0 0 24 3 1 #" "
0 0 14 3 10 #"Procedures"
0 0 24 3 1 #" "
0 0 14 3 5 #"Using"
0 0 24 3 1 #" "
0 0 14 3 6 #"Lambda"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"sum"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 2 #" ("
0 0 14 3 4 #"next"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 4 #"next"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"pi-sum"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"sum"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"integral"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 2 #"dx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 41 #"; Assign a to be xy + 1 and b to be y - 1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         277 21           0 0           0 45 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.34:"
0 0 24 3 1 #" "
0 0 14 3 7 #"Suppose"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 29 1 #"\n"
0 0 14 3 4 #"What"
0 0 24 3 1 #" "
0 0 14 3 7 #"happens"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 2 #" ("
0 0 14 3 10 #"perversely"
0 0 24 3 2 #") "
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 11 #"interpreter"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 8 #"evaluate"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 11 #"combination"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 8 #"Explain."
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #") ("
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #"; ("
0 0 17 3 2 #"ff"
0 0 17 3 1 #" "
0 0 17 3 81
(
 #"ff) It will throw an error as it expects to apply ff to 2 but it app"
 #"lies ff to ff"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9          61 21           0 0           0 9 0 14 3 5 #"1.3.3"
0 0 24 3 1 #" "
0 0 14 3 10 #"Procedures"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 7 #"General"
0 0 24 3 1 #" "
0 0 14 3 7 #"Methods"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 21 3 5 #"0.001"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"search"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 14 #"; Get midpoint"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"midpoint"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 31 #"; If its small enough return it"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 8 #"midpoint"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 50 #"; Otherwise apply term to midpoint and check again"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"test-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 10 #"test-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"search"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"neg-point"
0 0 24 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 9 #"negative?"
0 0 24 3 1 #" "
0 0 14 3 10 #"test-value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"search"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-point"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 8 #"midpoint"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"half-interval-method"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 40 #"; Apply the term to start and end values"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"a-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"b-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 57 #"; If we have a < 0 and b > 0 then search in the a-b range"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"negative?"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-value"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 7 #"b-value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"search"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"negative?"
0 0 24 3 1 #" "
0 0 14 3 7 #"b-value"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 30 #"; else search in the b-a range"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"search"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 49 #"; otherwise we have no root solution for f(x) = 0"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"Values are not of "
0 0 19 29 1 #"\n"
0 0 19 3 33 #"                   opposite sign\""
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 20 #"half-interval-method"
0 0 24 3 1 #" "
0 0 14 3 3 #"sin"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.0"
0 0 24 3 2 #") "
0 0 17 3 14 #";3.14111328125"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 20 #"half-interval-method"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.0"
0 0 24 3 2 #") "
0 0 17 3 14 #";1.89306640625"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Finding fixed points or f(x) = x"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 24 3 1 #" "
0 0 21 3 7 #"0.00001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 34 #"; Check if v1, v2 are close enough"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 9 #"tolerance"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #"; Apply term to guest and check if its close enough"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"next"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 24 #"; Start with first-guess"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 3 #"cos"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #") "
0 0 17 3 18 #";.7390822985224023"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"fixed-point"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sin"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cos"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #") "
0 0 17 3 19 #";1.2587315962971173"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         373 21           0 0           0 61 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.35:"
0 0 24 3 1 #" "
0 0 14 3 4 #"Show"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"golden"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\206"
0 0 24 3 2 #" ("
0 0 14 3 5 #"1.2.2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"fixed"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 14 #"transformation"
0 0 24 3 1 #" "
0 0 14 3 18 #"x\342\206\2461+1/xx\342\206\2461+1/x"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 7 #"compute"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\206"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 5 #"means"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedure."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"phi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #") "
0 0 17 3 19 #";1.2587315962971173"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"phi"
0 0 24 3 2 #") "
0 0 17 3 20 #"; 1.6180327868852458"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1105 21           0 0           0 183 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.36:"
0 0 24 3 1 #" "
0 0 14 3 6 #"Modify"
0 0 24 3 1 #" "
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 2 #"so"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 6 #"prints"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 15 3 8 #"sequence"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 29 1 #"\n"
0 0 14 3 14 #"approximations"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 9 #"generates"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"using"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"newline"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 10 #"primitives"
0 0 24 3 1 #" "
0 0 14 3 5 #"shown"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.22."
0 0 24 3 1 #" "
0 0 14 3 4 #"Then"
0 0 24 3 1 #" "
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"solution"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 14 #"xx=1000xx=1000"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 7 #"finding"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"fixed"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"point"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 7 #"x\342\206\246log"
0 0 24 3 1 #"("
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 14 3 4 #"/log"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 10 #"x\342\206\246log\342\201\241"
0 0 24 3 1 #"("
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 14 3 7 #"/log\342\201\241"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"Use"
0 0 24 3 1 #" "
0 0 14 3 10 #"Scheme\342\200\231s"
0 0 24 3 1 #" "
0 0 14 3 9 #"primitive"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 7 #"natural"
0 0 24 3 1 #" "
0 0 14 3 11 #"logarithms."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"Compare"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 5 #"steps"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 7 #"without"
0 0 24 3 1 #" "
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 8 #"damping."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"Note"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 6 #"cannot"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 5 #"would"
0 0 24 3 1 #" "
0 0 14 3 5 #"cause"
0 0 24 3 1 #" "
0 0 14 3 8 #"division"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 14 3 8 #"=0log\342\201\241"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 14 3 3 #"=0."
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fixed-point-debug"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 9 #"tolerance"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"next"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"close-enough?"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"try"
0 0 24 3 1 #" "
0 0 14 3 11 #"first-guess"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"fixed-point-debug"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 3 #") ("
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 17 3 18 #";4.555533026568209"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1849 21           0 0           0 307 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.37:"
0 0 24 3 1 #" "
0 0 14 3 8 #"Infinite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 9 #"fraction."
0 0 24 29 1 #"\n"
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 2 #"As"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"infinite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"expansion"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ni"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 2 #"Di"
0 0 24 3 1 #" "
0 0 14 3 3 #"all"
0 0 24 3 1 #" "
0 0 14 3 5 #"equal"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"produces"
0 0 24 3 1 #" "
0 0 14 3 4 #"1/\317\206"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\206"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"One"
0 0 24 3 1 #" "
0 0 14 3 3 #"way"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 11 #"approximate"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 8 #"infinite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 8 #"truncate"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"expansion"
0 0 24 3 1 #" "
0 0 14 3 5 #"after"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 6 #"terms."
0 0 24 3 1 #" "
0 0 14 3 4 #"Such"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 14 #"truncation\342\200\224a"
0 0 24 3 1 #" "
0 0 14 3 9 #"so-called"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"finite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 3 1 #" "
0 0 14 3 6 #"k-term"
0 0 24 3 1 #" "
0 0 14 3 6 #"finite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"Suppose"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 2 #" ("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"ii"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 6 #"return"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"NiNi"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 4 #"DiDi"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"terms"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 9 #"fraction."
0 0 24 29 1 #"\n"
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 4 #"such"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 10 #"evaluating"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"kk-term"
0 0 24 3 1 #" "
0 0 14 3 6 #"finite"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 9 #"fraction."
0 0 24 29 1 #"\n"
0 0 14 3 5 #"Check"
0 0 24 3 1 #" "
0 0 14 3 4 #"your"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 13 #"approximating"
0 0 24 3 1 #" "
0 0 14 3 8 #"1/\317\2061/\317\206"
0 0 24 3 1 #" "
0 0 14 3 5 #"using"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"cont-frac"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 10 #"successive"
0 0 24 3 1 #" "
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 2 #"k."
0 0 24 3 1 #" "
0 0 14 3 3 #"How"
0 0 24 3 1 #" "
0 0 14 3 5 #"large"
0 0 24 3 1 #" "
0 0 14 3 4 #"must"
0 0 24 3 1 #" "
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 4 #"make"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"get"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 13 #"approximation"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 8 #"accurate"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 7 #"decimal"
0 0 24 3 1 #" "
0 0 14 3 7 #"places?"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"n-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"d-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"n-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"d-value"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"cont-frac"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 17 3 19 #";0.6179775280898876"
0 0 24 29 1 #"\n"
0 9         361 21           0 0           0 59 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 4 #"your"
0 0 24 3 1 #" "
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 9 #"generates"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"recursive"
0 0 24 3 1 #" "
0 0 14 3 7 #"process"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"write"
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"generates"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 9 #"iterative"
0 0 24 3 1 #" "
0 0 14 3 8 #"process."
0 0 24 3 1 #" "
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 9 #"generates"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 9 #"iterative"
0 0 24 3 1 #" "
0 0 14 3 7 #"process"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"write"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 9 #"generates"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"recursive"
0 0 24 3 1 #" "
0 0 14 3 8 #"process."
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cont-frac2"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"cont-frac-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cont-frac-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"n-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"d-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"n-value"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"d-value"
0 0 24 3 2 #" ("
0 0 14 3 14 #"cont-frac-iter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"cont-frac2"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 17 3 20 #"; 0.6179775280898876"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1003 21           0 0           0 166 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.38:"
0 0 24 3 1 #" "
0 0 14 3 2 #"In"
0 0 24 3 1 #" "
0 0 21 3 4 #"1737"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"Swiss"
0 0 24 3 1 #" "
0 0 14 3 13 #"mathematician"
0 0 24 3 1 #" "
0 0 14 3 8 #"Leonhard"
0 0 24 3 1 #" "
0 0 14 3 5 #"Euler"
0 0 24 3 1 #" "
0 0 14 3 9 #"published"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"memoir"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"De"
0 0 24 3 1 #" "
0 0 14 3 12 #"Fractionibus"
0 0 24 3 1 #" "
0 0 14 3 9 #"Continuis"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 1 #" "
0 0 14 3 8 #"included"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 3 1 #" "
0 0 14 3 9 #"expansion"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"e-2e-2"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 2 #"ee"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"natural"
0 0 24 3 1 #" "
0 0 14 3 11 #"logarithms."
0 0 24 3 1 #" "
0 0 14 3 2 #"In"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"NiNi"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 3 #"all"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"DiDi"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 12 #"successively"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"...."
0 0 24 29 1 #"\n"
0 0 14 3 5 #"Write"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"uses"
0 0 24 3 1 #" "
0 0 14 3 4 #"your"
0 0 24 3 1 #" "
0 0 14 3 9 #"cont-frac"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 21 3 4 #"1.37"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 11 #"approximate"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"ee"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"based"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 14 3 9 #"Euler\342\200\231s"
0 0 24 3 1 #" "
0 0 14 3 10 #"expansion."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"e_2"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"cont-frac"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"e_2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         607 21           0 0           0 100 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.39:"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 9 #"continued"
0 0 24 3 1 #" "
0 0 14 3 8 #"fraction"
0 0 24 3 1 #" "
0 0 14 3 14 #"representation"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"tangent"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"was"
0 0 24 3 1 #" "
0 0 14 3 9 #"published"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 21 3 4 #"1770"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"German"
0 0 24 3 1 #" "
0 0 14 3 13 #"mathematician"
0 0 24 3 1 #" "
0 0 14 3 4 #"J.H."
0 0 24 3 1 #" "
0 0 14 3 8 #"Lambert:"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 2 #" ("
0 0 14 3 6 #"tan-cf"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 13 #"approximation"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"tangent"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 5 #"based"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 14 3 11 #"Lambert\342\200\231s"
0 0 24 3 1 #" "
0 0 14 3 8 #"formula."
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 9 #"specifies"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 5 #"terms"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 7 #"compute"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.37."
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9          49 21           0 0           0 7 0 14 3 15
#"1.3.4Procedures"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 8 #"Returned"
0 0 24 3 1 #" "
0 0 14 3 6 #"Values"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"average-damp"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; returns the average of 10 and 100, or 55"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 12 #"average-damp"
0 0 24 3 1 #" "
0 0 14 3 6 #"square"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sqrt2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"average-damp"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cube-root"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"average-damp"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; Derivative"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 1 #" "
0 0 21 3 7 #"0.00001"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"deriv"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"g"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 2 #"dx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cube"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 5 #"deriv"
0 0 24 3 1 #" "
0 0 14 3 4 #"cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 31 #";x|-> x^3 |- 3*x^2 = 3 * 25 =75"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; Newton method"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"newton-transform"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 5 #"deriv"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"newtons-method"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 2 #" ("
0 0 14 3 16 #"newton-transform"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"guess"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sqrt3"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"newtons-method"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"fixed-point-of-transform"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 9 #"transform"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"fixed-point"
0 0 24 3 2 #" ("
0 0 14 3 9 #"transform"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #") "
0 0 14 3 5 #"guess"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sqrt4"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"fixed-point-of-transform"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"average-damp"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sqrt5"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"fixed-point-of-transform"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 16 #"newton-transform"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         331 21           0 0           0 54 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.40:"
0 0 24 3 1 #" "
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 5 #"cubic"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 4 #"used"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"together"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 14 #"newtons-method"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 11 #"expressions"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"form"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"newtons-method"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cubic"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 17 3 26 #"; y |-> x/y^2 + x^2/y^2 + "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"cubic"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 2 #"c)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"lambda"
0 0 17 3 2 #" ("
0 0 17 3 4 #"y) ("
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"     ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 9 #" (square "
0 0 17 3 3 #"y))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 1 #"/"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 9 #" (square "
0 0 17 3 1 #"x"
0 0 17 3 11 #")) (square "
0 0 17 3 3 #"y))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 1 #"/"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 10 #") (square "
0 0 17 3 3 #"y))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 9 #" (square "
0 0 17 3 4 #"y)))"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";     ))"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         727 21           0 0           0 120 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.41:"
0 0 24 3 1 #" "
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 7 #"returns"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 7 #"applies"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"original"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 6 #"twice."
0 0 24 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"adds"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"its"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 4 #"then"
0 0 24 3 2 #" ("
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 2 #") "
0 0 14 3 6 #"should"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"adds"
0 0 24 3 1 #" "
0 0 21 3 2 #"2."
0 0 24 29 1 #"\n"
0 0 14 3 4 #"What"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 8 #"returned"
0 0 24 3 1 #" "
0 0 14 3 2 #"by"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"((("
0 0 14 3 6 #"double"
0 0 24 3 2 #" ("
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 14 3 6 #"double"
0 0 24 3 3 #")) "
0 0 14 3 3 #"inc"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"((("
0 0 14 3 6 #"double"
0 0 24 3 2 #" ("
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 14 3 6 #"double"
0 0 24 3 3 #")) "
0 0 14 3 3 #"inc"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 4 #"; 21"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         661 21           0 0           0 109 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.42:"
0 0 24 3 1 #" "
0 0 14 3 3 #"Let"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"gg"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 3 #"two"
0 0 24 3 1 #" "
0 0 14 3 12 #"one-argument"
0 0 24 3 1 #" "
0 0 14 3 10 #"functions."
0 0 24 29 1 #"\n"
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 11 #"composition"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 5 #"after"
0 0 24 3 1 #" "
0 0 14 3 2 #"gg"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 7 #"defined"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"x\342\206\246f"
0 0 24 3 1 #"("
0 0 14 3 1 #"g"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 14 3 5 #"x\342\206\246f"
0 0 24 3 1 #"("
0 0 14 3 1 #"g"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 6 #"Define"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 10 #"implements"
0 0 24 29 1 #"\n"
0 0 14 3 12 #"composition."
0 0 24 3 1 #" "
0 0 14 3 3 #"For"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"adds"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"its"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"49"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 17 3 4 #"; 49"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1861 21           0 0           0 309 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.43:"
0 0 24 3 1 #" "
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"numerical"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"nn"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"positive"
0 0 24 3 1 #" "
0 0 14 3 7 #"integer"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 14 3 4 #"form"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"nthnth"
0 0 24 3 1 #" "
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 11 #"application"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 7 #"defined"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 5 #"whose"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"at"
0 0 24 3 1 #" "
0 0 14 3 2 #"xx"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 24 3 1 #" "
0 0 14 3 7 #"example"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 14 #"x\342\206\246x+1x\342\206\246x+1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"nthnth"
0 0 24 3 1 #" "
0 0 14 3 8 #"repeated"
0 0 24 29 1 #"\n"
0 0 14 3 11 #"application"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 15 #"x\342\206\246x+nx\342\206\246x+n."
0 0 24 3 1 #" "
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"operation"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"squaring"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"nthnth"
0 0 24 3 1 #" "
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 11 #"application"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 6 #"raises"
0 0 24 3 1 #" "
0 0 14 3 3 #"its"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 10 #"2n-th2n-th"
0 0 24 3 1 #" "
0 0 14 3 6 #"power."
0 0 24 3 1 #" "
0 0 14 3 5 #"Write"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 6 #"inputs"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"positive"
0 0 24 3 1 #" "
0 0 14 3 7 #"integer"
0 0 24 3 1 #" "
0 0 14 3 2 #"nn"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 7 #"returns"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"nthnth"
0 0 24 3 1 #" "
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 11 #"application"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"ff."
0 0 24 29 1 #"\n"
0 0 14 3 4 #"Your"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 6 #"should"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 4 #"able"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 4 #"used"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 8 #"follows:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 3 #"625"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"Hint:"
0 0 24 3 1 #" "
0 0 14 3 3 #"You"
0 0 24 3 1 #" "
0 0 14 3 3 #"may"
0 0 24 3 1 #" "
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 10 #"convenient"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.42."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#"; Define an iterative process that will call the func times"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"repeat"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"repeat"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"repeat"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1531 21           0 0           0 254 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.44:"
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 4 #"idea"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 9 #"smoothing"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 9 #"important"
0 0 24 3 1 #" "
0 0 14 3 7 #"concept"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 6 #"signal"
0 0 24 3 1 #" "
0 0 14 3 11 #"processing."
0 0 24 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 4 #"dxdx"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"some"
0 0 24 3 1 #" "
0 0 14 3 5 #"small"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 7 #"version"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 2 #"ff"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 5 #"whose"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 2 #"at"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 1 #" "
0 0 14 3 2 #"xx"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 4 #"x-dx"
0 0 24 3 1 #")"
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 4 #"x-dx"
0 0 24 3 1 #")"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 4 #"x+dx"
0 0 24 3 1 #")"
0 0 14 3 1 #"f"
0 0 24 3 1 #"("
0 0 14 3 4 #"x+dx"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 5 #"Write"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 6 #"smooth"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"ff"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 7 #"returns"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 8 #"computes"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 3 #"ff."
0 0 24 3 1 #" "
0 0 14 3 2 #"It"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 9 #"sometimes"
0 0 24 3 1 #" "
0 0 14 3 8 #"valuable"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 29 1 #"\n"
0 0 14 3 10 #"repeatedly"
0 0 24 3 1 #" "
0 0 14 3 6 #"smooth"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 2 #" ("
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 6 #"smooth"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"so"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 2 #") "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"obtain"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"n-fold"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 9 #"function."
0 0 24 3 1 #" "
0 0 14 3 4 #"Show"
0 0 24 3 1 #" "
0 0 14 3 3 #"how"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 8 #"generate"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"n-fold"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"any"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 5 #"using"
0 0 24 3 1 #" "
0 0 14 3 6 #"smooth"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.43."
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"smoother"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"dx"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"repeated"
0 0 24 3 1 #" "
0 0 14 3 8 #"smoother"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 14 3 8 #"smoothed"
0 0 24 3 1 #" "
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 6 #"; 10.0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1585 21           0 0           0 263 0 14 3 8 #"Exercise"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.46:"
0 0 24 3 1 #" "
0 0 14 3 7 #"Several"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"numerical"
0 0 24 3 1 #" "
0 0 14 3 7 #"methods"
0 0 24 3 1 #" "
0 0 14 3 9 #"described"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 7 #"chapter"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 9 #"instances"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 9 #"extremely"
0 0 24 3 1 #" "
0 0 14 3 7 #"general"
0 0 24 3 1 #" "
0 0 14 3 13 #"computational"
0 0 24 3 1 #" "
0 0 14 3 8 #"strategy"
0 0 24 3 1 #" "
0 0 14 3 5 #"known"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 9 #"iterative"
0 0 24 3 1 #" "
0 0 14 3 12 #"improvement."
0 0 24 3 1 #" "
0 0 14 3 9 #"Iterative"
0 0 24 29 1 #"\n"
0 0 14 3 11 #"improvement"
0 0 24 3 1 #" "
0 0 14 3 4 #"says"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 7 #"compute"
0 0 24 3 1 #" "
0 0 14 3 9 #"something"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"answer"
0 0 28 3 1 #","
0 0 24 29 1 #"\n"
0 0 14 3 4 #"test"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"good"
0 0 24 3 1 #" "
0 0 14 3 6 #"enough"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 9 #"otherwise"
0 0 24 3 1 #" "
0 0 14 3 7 #"improve"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"process"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"using"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"improved"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 6 #"guess."
0 0 24 3 1 #" "
0 0 14 3 5 #"Write"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 17 #"iterative-improve"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"two"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedures"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 10 #"arguments:"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 7 #"telling"
0 0 24 3 1 #" "
0 0 14 3 7 #"whether"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"good"
0 0 24 3 1 #" "
0 0 14 3 6 #"enough"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 29 1 #"\n"
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 9 #"improving"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 6 #"guess."
0 0 24 3 1 #" "
0 0 14 3 17 #"Iterative-improve"
0 0 24 3 1 #" "
0 0 14 3 6 #"should"
0 0 24 3 1 #" "
0 0 14 3 6 #"return"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 3 #"its"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"takes"
0 0 24 29 1 #"\n"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 5 #"keeps"
0 0 24 3 1 #" "
0 0 14 3 9 #"improving"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"good"
0 0 24 3 1 #" "
0 0 14 3 7 #"enough."
0 0 24 3 1 #" "
0 0 14 3 7 #"Rewrite"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"sqrt"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.1.7"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 11 #"fixed-point"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 5 #"1.3.3"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"terms"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 18 #"iterative-improve."
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"iterative-improve"
0 0 24 3 1 #" "
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 13 #"improve-guess"
0 0 24 3 1 #" "
0 0 14 3 4 #"init"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"improve-iter"
0 0 24 3 1 #" "
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 13 #"improve-guess"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"improve-iter"
0 0 24 3 1 #" "
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 13 #"improve-guess"
0 0 24 3 2 #" ("
0 0 14 3 13 #"improve-guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   (("
0 0 14 3 12 #"improve-iter"
0 0 24 3 1 #" "
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 13 #"improve-guess"
0 0 24 3 3 #" ) "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ))"
0           0
